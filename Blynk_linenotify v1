
#define BLYNK_PRINT Serial


#include <WiFi.h>
#include <WiFiClient.h>
#include <WiFiClientSecure.h>
#include <BlynkSimpleEsp32.h>
#include <esp_task_wdt.h>
#include "ACS712.h"
#include <TridentTD_LineNotify.h>
#include <NTPClient.h>
// Arduino UNO has 5.0 volt with a max ADC value of 1023 steps
// ACS712 5A  uses 185 mV per A
// ACS712 20A uses 100 mV per A
// ACS712 30A uses  66 mV per A

ACS712  ACS(A0, 5.0, 1023, 100);
// ESP 32 example (requires resistors to step down the logic voltage)
//ACS712  ACS(25, 5.0, 4095, 185);

//3 seconds WDT
#define WDT_TIMEOUT 8
String _time;
WiFiUDP ntpUDP;
const long offsetTime = 25200;       //  7*60*60 = 25200
NTPClient timeClient(ntpUDP, "pool.ntp.org", offsetTime);

char auth[] = "Jq5gsocb_wWPb-tcPJm6QPjIYYHgUtcB";

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "TESTESP";
char pass[] = "a1234567";

#define LINE_TOKEN ""
BlynkTimer timer;
WidgetLED led(V1);
char line=0;


void timerEvent()
{
 Blynk.virtualWrite(V2, ACS.mA_AC()); 
  
  if(digitalRead(5)==LOW)
  {
    led.on(); 
    Blynk.virtualWrite(V0, "ON"); 
    if(line==0)
     {
      line=1;
      LINE.notify("เปิดไฟฟ้า เวลา "+String(_time));
    
     }
  }
  else{
    led.off();
    Blynk.virtualWrite(V0, "OFF"); 
    if(line==1)
     { 
      line=0;
     LINE.notify("ปิดไฟฟ้า เวลา "+String(_time));
     
     
     }
  }
}

void setup()
{
  // Debug console
  Serial.begin(9600);
  WiFi.begin(ssid, pass);
  Serial.println("");
  Serial.print("Connecting");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  };
  Blynk.begin(auth, ssid, pass);
  
  esp_task_wdt_init(WDT_TIMEOUT, true); //enable panic so ESP32 restarts
  esp_task_wdt_add(NULL); //add current thread to WDT watch

  timer.setInterval(2000L,timerEvent); 
  LINE.setToken(LINE_TOKEN);
  timeClient.begin();
}

void loop()
{  
   timeClient.update();
   if(timeClient.getHours()<10)
   {
     _time = "0" + String(timeClient.getHours())+":";
   }
   else{
     _time = String(timeClient.getHours())+":";
   }
   if(timeClient.getMinutes()<10)
   {
     _time += "0" + String(timeClient.getMinutes());
   }
   else{
    _time += String(timeClient.getMinutes()) +"น";
   }
  if(WiFi.status() != WL_CONNECTED)
  { 
    ESP.restart();
    WiFi.begin(ssid, pass);
  }
  Blynk.run();
  esp_task_wdt_reset();
  timer.run();
}
